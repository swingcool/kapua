<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright (c) 2011, 2017 Eurotech and/or its affiliates and others

    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

    Contributors:
        Eurotech - initial API and implementation
        Red Hat Inc
 -->
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:util="http://www.springframework.org/schema/util"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://activemq.apache.org/schema/core
         http://activemq.apache.org/schema/core/activemq-core.xsd
         http://camel.apache.org/schema/spring
         http://camel.apache.org/schema/spring/camel-spring-2.15.1.xsd
         http://www.springframework.org/schema/util
         http://www.springframework.org/schema/util/spring-util-3.2.xsd">

    <!-- Allows us to use system properties as variables in this configuration file -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <value>file:${activemq.conf}/credentials.properties</value>
        </property>
    </bean>

    <broker xmlns="http://activemq.apache.org/schema/core"
            brokerName="message-broker"
            id="message-broker-id"
            persistent="true"
            dataDirectory="${activemq.data}"
            schedulePeriodForDestinationPurge="-1"
            networkConnectorStartAsync="true"
            restartAllowed="false"
            useJmx="true"
            advisorySupport="false">

        <destinationPolicy>
            <policyMap>
                <policyEntries>
                    <policyEntry topic=">"
                                 producerFlowControl="true"
                                 durableTopicPrefetch="32766"
                                 topicPrefetch="32766"
                                 expireMessagesPeriod="300000"
                                 enableAudit="false"
                                 minimumMessageSize="256"
                                 advisoryForSlowConsumers="true"
                                 advisoryForFastProducers="true"
                                 advisoryWhenFull="true"
                                 advisoryForDiscardingMessages="true"
                                 gcInactiveDestinations="true"
                                 inactiveTimeoutBeforeGC="300000">
                        <pendingSubscriberPolicy>
                            <vmCursor/>
                        </pendingSubscriberPolicy>
                        <!--
                            Limit of messages sent to the consumer but not yet acknowledged.
                            The settings is per consumer so setting it to 1000.
                            http://activemq.apache.org/slow-consumer-handling.html
                        -->
                        <pendingMessageLimitStrategy>
                            <constantPendingMessageLimitStrategy limit="1000"/>
                        </pendingMessageLimitStrategy>
                        <subscriptionRecoveryPolicy>
                            <noSubscriptionRecoveryPolicy/>
                        </subscriptionRecoveryPolicy>
                        <deadLetterStrategy>
                            <sharedDeadLetterStrategy processExpired="false"/>
                        </deadLetterStrategy>
                    </policyEntry>

                    <!--
                        queuePrefetch: if you have just a single consumer attached to a queue, you can leave the prefetch limit at a fairly large value.
                        But if you are using a group of consumers to distribute the workload, it is usually better to restrict the prefetch limit to
                        a very small number—for example, 0 or 1.
                        http://activemq.apache.org/per-destination-policies.html
                        Retest with default prefetch of 1000. Is it better than 2?
                    -->
                    <policyEntry queue=">"
                                 producerFlowControl="true"
                                 optimizedDispatch="true"
                                 queuePrefetch="2"
                                 expireMessagesPeriod="300000"
                                 enableAudit="false"
                                 useConsumerPriority="false"
                                 minimumMessageSize="256"
                                 advisoryForSlowConsumers="true"
                                 advisoryForFastProducers="true"
                                 advisoryWhenFull="true"
                                 gcInactiveDestinations="true"
                                 inactiveTimeoutBeforeGC="300000">
                        <pendingSubscriberPolicy>
                            <vmCursor/>
                        </pendingSubscriberPolicy>
                        <deadLetterStrategy>
                            <sharedDeadLetterStrategy processExpired="false"/>
                        </deadLetterStrategy>
                    </policyEntry>
                </policyEntries>
            </policyMap>
        </destinationPolicy>

        <!-- commented to remove all jmx management -->
        <managementContext>
            <managementContext createConnector="false"/>
        </managementContext>

        <persistenceAdapter>
            <!--
                indexCacheSize—(default 10000) specifies the size of the cache in units of pages (where one page is 4 KB by default).
                https://access.redhat.com/documentation/en-US/Fuse_ESB_Enterprise/7.1/html/ActiveMQ_Tuning_Guide/files/PersTuning-KahaDB.html
            -->
            <kahaDB directory="${activemq.data}/kahadb"
                    journalMaxFileLength="32mb"
                    concurrentStoreAndDispatchQueues="true"
                    concurrentStoreAndDispatchTopics="false"
                    indexWriteBatchSize="10000"
                    indexCacheSize="100000"
                    enableJournalDiskSyncs="false"/>
        </persistenceAdapter>

        <plugins>
            <bean xmlns="http://www.springframework.org/schema/beans"
                  id="kapuaBrokerPlugin"
                  class="org.eclipse.kapua.broker.core.KapuaBrokerSecurityPlugin"/>
            <bean xmlns="http://www.springframework.org/schema/beans"
                  id="applicationFilter"
                  class="org.eclipse.kapua.broker.core.KapuaBrokerApplicationPlugin"/>
            <discardingDLQBrokerPlugin dropAll="true"
                                       dropTemporaryTopics="true"
                                       dropTemporaryQueues="true"/>
        </plugins>


        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage limit="6 gb"/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit="10 gb"/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit="1 gb"/>
                </tempUsage>
            </systemUsage>
        </systemUsage>

        <!--
        <sslContext>
            <sslContext keyStore="${certificatesHome}/kapua.ks" keyStorePassword="${keystorePassword}"/>
        </sslContext>
        -->

        <transportConnectors>
            <transportConnector name="mqtt"
                                uri="mqtt+nio://0.0.0.0:1883?transport.defaultKeepAlive=60000&amp;transport.maximumConnections=1000&amp;transport.socketBufferSize=131072&amp;transport.ioBufferSize=16384&amp;transport.activeMQSubscriptionPrefetch=32766&amp;transport.publishDollarTopics=true&amp;transport.subscriptionStrategy=mqtt-virtual-topic-subscriptions"/>
            <transportConnector name="mqtts"
                                uri="mqtt+nio+ssl://0.0.0.0:8883?transport.defaultKeepAlive=60000&amp;transport.maximumConnections=1000&amp;transport.socketBufferSize=131072&amp;transport.ioBufferSize=16384&amp;transport.activeMQSubscriptionPrefetch=32766&amp;transport.publishDollarTopics=true&amp;transport.subscriptionStrategy=mqtt-virtual-topic-subscriptions"/>
            <transportConnector name="tcp"
                                uri="tcp://0.0.0.0:61616?transport.maximumConnections=1000&amp;transport.socketBufferSize=131072&amp;ioBufferSize=16384&amp;transport.activeMQSubscriptionPrefetch=32766&amp;transport.publishDollarTopics=true&amp;transport.subscriptionStrategy=mqtt-virtual-topic-subscriptions"/>
            <transportConnector name="ws"
                                uri="ws://0.0.0.0:61614?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600&amp;transport.publishDollarTopics=true&amp;transport.subscriptionStrategy=mqtt-virtual-topic-subscriptions"/>
        </transportConnectors>
    </broker>

    <import resource="camel.xml"/>
    <!--<import resource="camel-experimental.xml"/>-->

</beans>
